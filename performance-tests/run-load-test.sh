#!/bin/bash

# Script para ejecutar pruebas de carga con JMeter
# Autor: Sistema de Transporte
# Fecha: $(date)

echo "üöÄ Iniciando pruebas de carga para la aplicaci√≥n de transporte..."

# Variables de configuraci√≥n
JMETER_HOME=${JMETER_HOME:-"/opt/apache-jmeter"}
TEST_PLAN="transporte-load-test.jmx"
RESULTS_DIR="results"
REPORT_DIR="reports"

# Crear directorios si no existen
mkdir -p $RESULTS_DIR $REPORT_DIR

# Verificar que JMeter est√© disponible
if ! command -v jmeter &> /dev/null; then
    echo "‚ùå JMeter no est√° instalado. Instalando..."
    
    # Descargar JMeter si no est√° disponible
    if [ ! -d "$JMETER_HOME" ]; then
        echo "üì• Descargando Apache JMeter..."
        wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.4.1.tgz
        tar -xzf apache-jmeter-5.4.1.tgz
        mv apache-jmeter-5.4.1 $JMETER_HOME
        rm apache-jmeter-5.4.1.tgz
    fi
    
    export PATH=$PATH:$JMETER_HOME/bin
fi

# Verificar que la aplicaci√≥n est√© ejecut√°ndose
echo "üîç Verificando que la aplicaci√≥n est√© ejecut√°ndose..."
if ! curl -f http://localhost:8080/actuator/health &> /dev/null; then
    echo "‚ùå La aplicaci√≥n no est√° ejecut√°ndose en http://localhost:8080"
    echo "üí° Ejecuta: docker-compose up -d"
    exit 1
fi

echo "‚úÖ Aplicaci√≥n detectada en http://localhost:8080"

# Ejecutar pruebas de carga
echo "‚ö° Ejecutando pruebas de carga..."
jmeter -n \
    -t $TEST_PLAN \
    -l $RESULTS_DIR/load-test-results.jtl \
    -e \
    -o $REPORT_DIR/html-report \
    -Jhost=localhost \
    -Jport=8080 \
    -Jprotocol=http

# Verificar resultados
if [ $? -eq 0 ]; then
    echo "‚úÖ Pruebas de carga completadas exitosamente"
    echo "üìä Reporte HTML generado en: $REPORT_DIR/html-report/index.html"
    echo "üìà Resultados detallados en: $RESULTS_DIR/load-test-results.jtl"
    
    # Mostrar resumen de m√©tricas
    echo ""
    echo "üìã RESUMEN DE PRUEBAS DE CARGA:"
    echo "================================="
    
    # Extraer m√©tricas b√°sicas del archivo de resultados
    if [ -f "$RESULTS_DIR/load-test-results.jtl" ]; then
        TOTAL_REQUESTS=$(grep -c "200\|201\|400\|500" $RESULTS_DIR/load-test-results.jtl 2>/dev/null || echo "0")
        SUCCESS_REQUESTS=$(grep -c "200\|201" $RESULTS_DIR/load-test-results.jtl 2>/dev/null || echo "0")
        ERROR_REQUESTS=$(grep -c "400\|500" $RESULTS_DIR/load-test-results.jtl 2>/dev/null || echo "0")
        
        echo "üìä Total de requests: $TOTAL_REQUESTS"
        echo "‚úÖ Requests exitosos: $SUCCESS_REQUESTS"
        echo "‚ùå Requests con error: $ERROR_REQUESTS"
        
        if [ "$TOTAL_REQUESTS" -gt 0 ]; then
            SUCCESS_RATE=$((SUCCESS_REQUESTS * 100 / TOTAL_REQUESTS))
            echo "üìà Tasa de √©xito: $SUCCESS_RATE%"
        fi
    fi
    
    echo ""
    echo "üéØ RECOMENDACIONES:"
    echo "==================="
    echo "‚Ä¢ Revisa el reporte HTML para an√°lisis detallado"
    echo "‚Ä¢ Verifica m√©tricas en Prometheus: http://localhost:9090"
    echo "‚Ä¢ Visualiza dashboards en Grafana: http://localhost:3000"
    echo "‚Ä¢ Considera optimizaciones si la tasa de √©xito es < 95%"
    
else
    echo "‚ùå Error al ejecutar las pruebas de carga"
    exit 1
fi 